name: Build and Test Wheels

on:
  push:
    branches: [main]
    tags:
      - 'v*'  # Trigger on version tags
  pull_request:
    branches: [main]
  workflow_dispatch:  # Allow manual triggering
    inputs:
      publish_to_test_pypi:
        description: 'Publish to Test PyPI?'
        required: false
        type: boolean
        default: false

jobs:
  # Run tests
  test:
    name: Run tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -e ".[dev]"
          pip install pytest-cov
      
      - name: Run tests
        run: |
          pytest tests/ --cov=django_mercury --cov-report=term-missing
      
      - name: Verify pure Python implementation
        run: |
          python -c "import django_mercury; print(f'Version: {django_mercury.__version__}')"
          python -c "from django_mercury.python_bindings.c_bindings import HAS_C_EXTENSIONS; assert not HAS_C_EXTENSIONS"

  # Build source distribution and pure Python wheel
  build:
    name: Build distributions
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine
      
      - name: Build distributions
        run: |
          python -m build --sdist --wheel
          
      - name: Check distributions
        run: |
          twine check dist/*
          ls -lh dist/
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  # Optional: Publish to Test PyPI
  publish-test:
    name: Publish to Test PyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.publish_to_test_pypi == 'true'
    
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

  # Publish to PyPI on version tags
  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true